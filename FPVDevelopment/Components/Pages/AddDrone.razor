@page "/AddDrone"
@using FPVDevelopment.Components.Data.Classes
@using FPVDevelopment.Components.Data.Models
@using static FPVDevelopment.Components.Globals.Enums
@inject DroneService droneService;
@inject ToastService toastService
@inject CurrentUser currentUser;
@rendermode InteractiveServer

<h1>Add a new drone to the database.</h1>
<br />
<EditForm FormName="AddDroneForm" Model="@drone" OnSubmit="HandleSubmit">
    <label for="NameInput">Drone Name: </label>
    <InputText id="NameInput"
               @bind-Value="@drone.Name" />
    <br />
    <label for="IsCustomInput">Is This Drone Custom?</label>
    <InputCheckbox id="IsCustomInput" @bind-Value="@isCustom"></InputCheckbox>

    <br /><br />

    <label for="DifficultyInput">Drone Size: </label>
    <InputSelect id="DifficultyInput" @bind-Value="@drone.Size">
        @foreach (DroneSize size in Enum.GetValues(typeof(DroneSize)))
        {
            string displayTag = GetEnumDescription(size);
            <option value="@size">@displayTag</option>
        }
    </InputSelect>
    <br /><br />

    <button type="submit" class="btn-outline-primary" disabled="@_isSubmitDisabled">Add Drone</button>
</EditForm>

@code {
    Drone drone = new Drone();

    private bool isCustom = true;

    private bool _isSubmitDisabled =>
        string.IsNullOrWhiteSpace(drone.Name);

    private async Task HandleSubmit(EditContext editContext)
    {
        var newDrone = new Drone
        {
            Name = drone.Name,
            Size = drone.Size
        };
        
        if (isCustom)
            newDrone.UsedID = currentUser.User.ID;
        
        droneService.AddDrone(newDrone);
        toastService.ShowSuccess("Drone Added!", 5);
    }
}