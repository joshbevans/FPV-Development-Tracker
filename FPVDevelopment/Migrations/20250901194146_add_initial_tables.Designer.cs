// <auto-generated />
using System;
using FPVDevelopment.Components.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPVDevelopment.Migrations
{
    [DbContext(typeof(FPVDbContext))]
    [Migration("20250901194146_add_initial_tables")]
    partial class add_initial_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.CompletedRun", b =>
                {
                    b.Property<int>("CompletedRunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompletedRunID"));

                    b.Property<TimeSpan>("CompletedRunTime")
                        .HasColumnType("time");

                    b.Property<int>("DroneID")
                        .HasColumnType("int");

                    b.Property<int>("MapID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CompletedRunID");

                    b.HasIndex("DroneID");

                    b.HasIndex("MapID");

                    b.HasIndex("UserID");

                    b.ToTable("CompletedRuns");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.Drone", b =>
                {
                    b.Property<int>("DroneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DroneID"));

                    b.Property<string>("DroneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DroneSize")
                        .HasColumnType("int");

                    b.HasKey("DroneID");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.Map", b =>
                {
                    b.Property<int>("MapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MapID"));

                    b.Property<int>("MapDifficulty")
                        .HasColumnType("int");

                    b.Property<string>("MapName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MapID");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.CompletedRun", b =>
                {
                    b.HasOne("FPVDevelopment.Components.Data.Models.Drone", "Drone")
                        .WithMany("CompletedRuns")
                        .HasForeignKey("DroneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPVDevelopment.Components.Data.Models.Map", "Map")
                        .WithMany("CompletedRuns")
                        .HasForeignKey("MapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPVDevelopment.Components.Data.Models.User", "User")
                        .WithMany("CompletedRuns")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");

                    b.Navigation("Map");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.Drone", b =>
                {
                    b.Navigation("CompletedRuns");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.Map", b =>
                {
                    b.Navigation("CompletedRuns");
                });

            modelBuilder.Entity("FPVDevelopment.Components.Data.Models.User", b =>
                {
                    b.Navigation("CompletedRuns");
                });
#pragma warning restore 612, 618
        }
    }
}
